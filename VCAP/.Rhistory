}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/motif_logo_at_time",win,".pdf",sep=""))
par(mfrow=c(2,2))
lapply(pcm_sequences_time, function(i) seqLogo(makePWM(i)))
dev.off()
win <- 7
time_range <- NULL
for(i in 0:(max(corresponding_all$ordered_point_change)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/motif_logo_at_time",win,".pdf",sep=""))
par(mfrow=c(2,2))
lapply(pcm_sequences_time, function(i) seqLogo(makePWM(i)))
dev.off()
time_range
win <- 8
time_range <- NULL
for(i in 0:(max(corresponding_all$ordered_point_change)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/motif_logo_at_time",win,".pdf",sep=""))
par(mfrow=c(2,2))
lapply(pcm_sequences_time, function(i) seqLogo(makePWM(i)))
dev.off()
time_range
win <- 9
time_range <- NULL
for(i in 0:(max(corresponding_all$ordered_point_change)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/motif_logo_at_time",win,".pdf",sep=""))
par(mfrow=c(2,2))
lapply(pcm_sequences_time, function(i) seqLogo(makePWM(i)))
dev.off()
win <- 10
time_range <- NULL
for(i in 0:(max(corresponding_all$ordered_point_change)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/motif_logo_at_time",win,".pdf",sep=""))
par(mfrow=c(2,2))
lapply(pcm_sequences_time, function(i) seqLogo(makePWM(i)))
dev.off()
time_range
win <- 12
time_range <- NULL
for(i in 0:(max(corresponding_all$ordered_point_change)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/motif_logo_at_time",win,".pdf",sep=""))
par(mfrow=c(2,2))
lapply(pcm_sequences_time, function(i) seqLogo(makePWM(i)))
dev.off()
time_range
head(fimo_out)
head(corresponding_all)
head(fimo_out)
head(corresponding_all)
head(genes_corr_illumina_position)
length(point_change)
length(androgen_point_change)
nrow(ordered_tfs)
androgen_ordered_point_change <- rep(NA, nrow(ordered_tfs))
for(i in 1:length(point_change)){
# ordered_point_change[which(ordered_tfs$IlluminaID==VCapProbes_passed$VCap.Probe_id[i])] <- point_change[i]
androgen_ordered_point_change[which(ordered_tfs$IlluminaID==VCapProbes_passed$VCap.Probe_id[i])] <- androgen_point_change[i]
}
androgen_probes_timechange <- cbind(ordered_tfs, androgen_ordered_point_change)
head(androgen_probes_timechange)
head(probes_timechange)
androgen_probes_timechange <- cbind(probes_timechange, androgen_ordered_point_change)
head(androgen_probes_timechange)
head(genes_corr_position)
head(genes_corr_illumina_position)
genes_corr_illumina_position <- androgen_probes_timechange[androgen_probes_timechange$EnsemblReannotated%in%rcade_results$geneID,]
ordered_fimo_genes_corr<-NULL
for(i in 1:nrow(fimo_out)){
ind_gene_corr <- which((genes_corr_illumina_position$IlluminaID==fimo_split[[i]][2])&
(genes_corr_illumina_position$EnsemblReannotated==fimo_split[[i]][1])&
(genes_corr_illumina_position$GenomicLocation==fimo_split[[i]][3]))
ordered_fimo_genes_corr <- rbind(ordered_fimo_genes_corr, genes_corr_illumina_position[ind_gene_corr,])
}
corresponding_all <-cbind(fimo_out,ordered_fimo_genes_corr)
hist(table(corresponding_all$matched.sequence))
motifs <- corresponding_all$matched.sequence
levels(motifs) <- 1:length(levels(motifs))
plot(as.numeric(as.character(motifs)), corresponding_all$ordered_point_change)
head(corresponding_all)
win <- 3
time_range <- NULL
for(i in 0:(max(corresponding_all$androgen_ordered_point_change)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$androgen_ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
par(mfrow=c(2,2))
lapply(pcm_sequences_time, function(i) seqLogo(makePWM(i)))
dev.off()
max(corresponding_all$androgen_ordered_point_change)
?max
win <- 3
time_range <- NULL
for(i in 0:(max(corresponding_all$androgen_ordered_point_change, na.rm=TRUE)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
time_range
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$androgen_ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
par(mfrow=c(2,2))
lapply(pcm_sequences_time, function(i) seqLogo(makePWM(i)))
dev.off()
dev.off()
win <- 4
time_range <- NULL
for(i in 0:(max(corresponding_all$androgen_ordered_point_change, na.rm=TRUE)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$androgen_ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
par(mfrow=c(2,2))
lapply(pcm_sequences_time, function(i) seqLogo(makePWM(i)))
dev.off()
for(win in 3:12){
time_range <- NULL
for(i in 0:(max(corresponding_all$androgen_ordered_point_change, na.rm=TRUE)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$androgen_ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
par(mfrow=c(2,2))
lapply(pcm_sequences_time, function(i) seqLogo(makePWM(i)))
dev.off()
}
pcm_sequences_time
dim(pcm_sequences_time[[6]])
length(pcm_sequences_time[[6]])
?seqLogo
plot(NULL)
plot(NA)
plot(1)
plot(1)
for(win in 3:12){
time_range <- NULL
for(i in 0:(max(corresponding_all$androgen_ordered_point_change, na.rm=TRUE)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$androgen_ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
lapply(pcm_sequences_time, function(i) ifelse(length(i)!=0,seqLogo(makePWM(i)),plot(1)))
dev.off()
}
win=3
time_range <- NULL
for(i in 0:(max(corresponding_all$androgen_ordered_point_change, na.rm=TRUE)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$androgen_ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
lapply(pcm_sequences_time, function(i) ifelse(length(i)!=0,seqLogo(makePWM(i)),plot(1)))
dev.off()
dev.plot
dev.off()
dev.off()
dev.off()
win=4
time_range <- NULL
for(i in 0:(max(corresponding_all$androgen_ordered_point_change, na.rm=TRUE)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$androgen_ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
lapply(pcm_sequences_time, function(i) ifelse(length(i)!=0,seqLogo(makePWM(i)),plot(1)))
dev.off()
pcm_sequences_time
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
lapply(pcm_sequences_time, function(i) ifelse(length(i)>0,seqLogo(makePWM(i)),plot(1)))
dev.off()
win
length(pcm_sequences_time[[1]])
length(pcm_sequences_time[[2]])
length(pcm_sequences_time[[3]])
length(pcm_sequences_time[[4]])
length(pcm_sequences_time[[5]])
length(pcm_sequences_time[[6]])
length(pcm_sequences_time[[7]])
length(pcm_sequences_time[[8]])
lapply(pcm_sequences_time, function(i) ifelse(length(i)>0,seqLogo(makePWM(i)),plot(1)))
?ifelse
win
time_range <- NULL
for(i in 0:(max(corresponding_all$androgen_ordered_point_change, na.rm=TRUE)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$androgen_ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
for(ll in 1:length(pcm_sequences_time)){
if(length(pcm_sequences_time[[ll]])>0){
seqLogo(pcm_sequences_time[[ll]])
}else{
plot(1)
}
}
# lapply(pcm_sequences_time, function(i) ifelse(length(i)>0,seqLogo(makePWM(i)),plot(1)))
dev.off()
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
for(ll in 1:length(pcm_sequences_time)){
if(length(pcm_sequences_time[[ll]])>0){
seqLogo(pcm_sequences_time[[ll]])
title(paste("time < ",time_range[ll], sep=""))
}else{
plot(1)
}
}
dev.off()
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
for(ll in 1:length(pcm_sequences_time)){
if(length(pcm_sequences_time[[ll]])>0){
seqLogo(pcm_sequences_time[[ll]], main=paste("time < ",time_range[ll], sep=""))
}else{
plot(1)
}
}
dev.off()
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
for(ll in 1:length(pcm_sequences_time)){
if(length(pcm_sequences_time[[ll]])>0){
seqLogo(pcm_sequences_time[[ll]], title=paste("time < ",time_range[ll], sep=""))
}else{
plot(1)
}
}
dev.off()
rm(win)
for(win in 3:12){
time_range <- NULL
for(i in 0:(max(corresponding_all$androgen_ordered_point_change, na.rm=TRUE)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$androgen_ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
# Use the e' bioconductor package seqLogo
library(seqLogo)
pdf(paste("Figures/androgen_motif_logo_at_time",win,".pdf",sep=""))
for(ll in 1:length(pcm_sequences_time)){
if(length(pcm_sequences_time[[ll]])>0){
seqLogo(pcm_sequences_time[[ll]])
}else{
plot(1)
}
}
dev.off()
}
win=12
time_range <- NULL
for(i in 0:(max(corresponding_all$androgen_ordered_point_change, na.rm=TRUE)/3)){
time_range <- c(time_range, pc_ar+(win*i))
}
#GEt the indeces of the genes that change within that time range (t1<x<=t2) == (x<=t2 - x<=t1). I use setdiff!
data_time_ind <- vector("list", length(time_range))
for(i in 1:length(time_range)){
data_time_ind[[i]] <- setdiff(which(corresponding_all$androgen_ordered_point_change<=time_range[i]), unlist(data_time_ind))
print(i)
}
corresponding_all_time <- lapply(data_time_ind, function(i) corresponding_all[i,])
# Check what are the motifs that appear most in each time window
# Create a Percentage matrix position for each time window ----
sequence_window <- lapply(corresponding_all_time, function(i) DNAStringSet(as.character(i$matched.sequence)))
# Create a fake PWM ----
pcm_sequences_time <- lapply(sequence_window, function(i) if(length(i)!=0){consensusMatrix(i,as.prob=TRUE)[1:4,]})
data_time_ind
head(genes_corr_illumina_position)
head(corresponding_all)
dim(genes_corr_position)
dim(genes_corr_illumina_position)
dim(corrsponding_all)
dim(corresponding_all)
dim(corresponding_all)
dim(genes_corr_position)
fimo_split
dim(genes_corr_illumina_position)
dim(genes_corr_position)
head(genes_corr_position)
ordered_fimo_genes_corr <- ordered_fimo_genes_corr_location <- NULL
for(i in 1:nrow(fimo_out)){
ind_gene_corr <- which((genes_corr_illumina_position$IlluminaID==fimo_split[[i]][2])&
(genes_corr_illumina_position$EnsemblReannotated==fimo_split[[i]][1])&
(genes_corr_illumina_position$GenomicLocation==fimo_split[[i]][3]))
ordered_fimo_genes_corr <- rbind(ordered_fimo_genes_corr, genes_corr_illumina_position[ind_gene_corr,])
ordered_fimo_genes_corr_location <- rbind(ordered_fimo_genes_corr, genes_corr_position[ind_gene_corr,])
}
ordered_fimo_genes_corr <- ordered_fimo_genes_corr_location <- NULL
for(i in 1:nrow(fimo_out)){
ind_gene_corr <- which((genes_corr_illumina_position$IlluminaID==fimo_split[[i]][2])&
(genes_corr_illumina_position$EnsemblReannotated==fimo_split[[i]][1])&
(genes_corr_illumina_position$GenomicLocation==fimo_split[[i]][3]))
ordered_fimo_genes_corr <- rbind(ordered_fimo_genes_corr, genes_corr_illumina_position[ind_gene_corr,])
ordered_fimo_genes_corr_location <- rbind(ordered_fimo_genes_corr_location, genes_corr_position[ind_gene_corr,])
}
head(ordered_fimo_genes_corr_location)
head(ordered_fimo_genes_corr)
corresponding_all_location <- cbind(fimo_out,ordered_fimo_genes_corr_location)
hist(table(corresponding_all$matched.sequence))
head(corresponding_all)
head(ordered_fimo_genes_corr_location)
head(ordered_fimo_genes_corr)
head(genes_corr_illumina_position)
dim(genes_corr_illumina_position)
dim(genes_corr_position)
dim(ordered_fimo_genes_corr)
dim(corresponding_all)
dim(corresponding_all_location)
head(corresponding_all)
corresponding_all_location <- cbind(fimo_out,
ordered_fimo_genes_corr_location,
corresponding_all$ordered_point_change,
corresponding_all$androgen_ordered_point_change)
head(corresponding_all_location)
dim(corresponding_all_location)

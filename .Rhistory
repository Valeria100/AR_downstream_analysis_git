library(gdata)
summary <- read.xls("/massietimecourse/Summary.xls", sheet=1, check.names=FALSE)
summary <- read.xls("massietimecourse/Summary.xls", sheet=1, check.names=FALSE)
dim(summary)
head(summary)
save(summary, file="summary.RData")
colnames(summary)
summary[1,]
summary[1,10]
summary[1,15]
summary[1,25]
summary[1,24]
summary[1,23]
summary[1,22]
col1
class(summary[1,1])
summary[1,1]
colnames(summary)
summary[1,]
coloumns
columns
cols
cols <- c(as.character(summary[1,1]), rep("VCap",9), rep("LNCap",9), rep("VCap",2), rep("LNCap",2), rep("VCapLNCap",2))
length(cols)
cols
cols <- c("Probes", rep("VCap",9), rep("LNCap",9), rep("VCap",2), rep("LNCap",2), rep("VCapLNCap",2))
summary_colnames <- paste(cols, summary[1,], sep=".")
summary_colnames
summary[1,]
class(summary[1,])
class(t(summary[1,]))
t(summary[1,])
as.character(summary[1,])
as.character(t(summary[1,]))
summary_colnames <- paste(cols, as.character(t(summary[1,])), sep=".")
summary_colnames
summary_colnames <- gsub(" ", "_", summary_colnames)
summary_colnames
summary_colnames <- paste(cols, as.character(t(summary[1,])), sep=".")
sum_col <- gsub(".","",as.character(t(summary[1,])))
summary_colnames <- paste(cols, as.character(t(summary[1,])), sep=".")
summary_colnames <- gsub(" ", "_", summary_colnames)
summary_colnames
cols <- c("Probes", rep("VCap",9), rep("LNCap",9), rep("VCap",2), rep("LNCap",2), rep("VCapLNCap",2))
sum_col <- gsub(".","",as.character(t(summary[1,])))
sum_col
as.character(t(summary[1,]))
gsub(".","",as.character(t(summary[1,])))
sum_col <- gsub("\.","",as.character(t(summary[1,])))
sum_col <- gsub("[.]","",as.character(t(summary[1,])))
sum_col
sum_col <- gsub(" ", "_", sum_col)
sum_col
sum_col <- gsub("?", "", sum_col)
sum_col
sum_col <- gsub("[?]", "", sum_col)
sum_col
summary_colnames <- paste(cols, sum_col, sep=".")
summary_colnames
colnames(summary) <- summary_colnames
colnames(summary)
head(summary)
rownames(summary)
rownames(head(summary))
summary[1:5,:5]
summary[1:5,1:5]
rownames(summary) <- c(0:(nrow(summary)-1))
summary <- summary[-1,]
summary[1:5,1:5]
probes <- summary[,c(1,2,10,11,19)]
head(probes)
summary$Probes.Probe_Type[1:5]
titles <- c("VCapAndrogen1","VCapAndrogen2","VCapControl1","VCapControl2",
"LNCapAndrogen1","LNCapAndrogen2","LNCapControl1","LNCapControl2")
for(i in 1:length(titles)){
assign(titles[i],read.table(paste(folder,"/massietimecourse/",titles[i],".csv",sep=""),header=TRUE,check.names=FALSE,sep=","))
}
for(i in 1:length(titles)){
assign(titles[i],read.table(paste("massietimecourse/",titles[i],".csv",sep=""),header=TRUE,check.names=FALSE,sep=","))
}
even_rows <- function(Data, Probes){
matrix_na <- matrix(NA, length(which(Probes[,1]=="LNCap Only")), ncol(Data))
colnames(matrix_na) <- colnames(Data)
even_matrix <- rbind(Data, matrix_na)
return(even_matrix)
}
VCapAndrogen1 <- even_rows(VCapAndrogen1, probes)
VCapAndrogen2 <- even_rows(VCapAndrogen2, probes)
VCapControl1 <- even_rows(VCapControl1, probes)
VCapControl2 <- even_rows(VCapControl2, probes)
time_titles <- c("time_VCapAndrogen1","time_VCapAndrogen2","time_VCapControl1","time_VCapControl2",
"time_LNCapAndrogen1","time_LNCapAndrogen2","time_LNCapControl1","time_LNCapControl2")
for(i in 1:length(time_titles)){
assign(time_titles[i],as.numeric(gsub("Time","",colnames(get(titles[i])))))
}
time_VCapAndrogen1
time_LNCapAndrogen1
calculate_acf <- function(Data,ci){
acf_data <- NULL
for(i in 1:nrow(Data)){
if(all(is.na(Data[i,]))){
acf_data[i] <- NA
}else{
acf_data[i] <- acf(as.numeric(Data[i,]),type="correlation",lag.max=nrow(Data), plot=FALSE)$acf[2]
}
}
# Only the positive acf gets selected. when acf<0 is because the signal goes up and down.
acf_index <- which(acf_data>=ci) #which(abs(acf_data)>=ci) #
acf_value <- acf_data[acf_index]
acf_Data <- cbind(acf_index,acf_value)
return(acf_Data)
}
# the qnorm... is how acf calculates the confidence intervals you can see in the plots.
# I use it as threshold.
VA1 <- calculate_acf(VCapAndrogen1,qnorm((1+0.95)/2)/sqrt(ncol(VCapAndrogen1)))
VA2 <- calculate_acf(VCapAndrogen2,qnorm((1+0.95)/2)/sqrt(ncol(VCapAndrogen2)))
LNA1 <- calculate_acf(LNCapAndrogen1,qnorm((1+0.95)/2)/sqrt(ncol(LNCapAndrogen1)))
LNA2 <- calculate_acf(LNCapAndrogen2,qnorm((1+0.95)/2)/sqrt(ncol(LNCapAndrogen2)))
VC1 <- calculate_acf(VCapControl1,qnorm((1+0.95)/2)/sqrt(ncol(VCapControl1)))
VC2 <- calculate_acf(VCapControl2,qnorm((1+0.95)/2)/sqrt(ncol(VCapControl2)))
LNC1 <- calculate_acf(LNCapControl1,qnorm((1+0.95)/2)/sqrt(ncol(LNCapControl1)))
LNC2 <- calculate_acf(LNCapControl2,qnorm((1+0.95)/2)/sqrt(ncol(LNCapControl2)))
rm(LNA1)
rm(LNA2)
rm(LNC2)
rm(LNC1)
LNC1
dim(VCapAndrogen1)
dim(LNCapAndrogen1)
rm(VC1)
rm(VC2)
rm(VA2)
rm(VA1)
dim(VCapControl2)
time_LNCapAndrogen1
dim(LNC1)
rm(calculate_acf())
rm(calculate_acf
)
